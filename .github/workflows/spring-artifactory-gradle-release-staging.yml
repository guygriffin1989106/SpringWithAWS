name: Build with Gradle and Stage Release to Artifactory

on:
  workflow_call:
    inputs:
      releaseVersion:
        description: 'Release version like 3.0.0-M1, 3.1.0-RC1, 3.2.0 etc.'
        required: true
        type: string
      nextDevelopmentVersion:
        description: 'Next development version like 3.1.1-SNAPSHOT'
        required: true
        type: string
      gradleTasks:
        description: 'Additional Gradle tasks. The `build` and `artifactoryPublish` are included.'
        required: false
        default: 'dist'
        type: string

env:
  GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ secrets.GRADLE_ENTERPRISE_CACHE_USER }}
  GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD }}
  GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_SECRET_ACCESS_KEY }}

jobs:
  staging:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'spring-projects'
    steps:

      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_ACTIONS_REPO_TOKEN }}

      - name: Set up Gradle
        uses: spring-io/spring-gradle-build-action@v2

      - uses: jfrog/setup-jfrog-cli@v3
        with:
          version: 2.50.4
        env:
          JF_ENV_SPRING: ${{ secrets.JF_ARTIFACTORY_SPRING }}

      - name: Configure JFrog Cli
        run: |
          jf gradlec \
            --use-wrapper \
            --uses-plugin \
            --deploy-ivy-desc=false \
            --server-id-resolve repo.spring.io \
            --server-id-deploy repo.spring.io \
            --repo-resolve ${{ (contains(inputs.releaseVersion, 'M') || contains(inputs.releaseVersion, 'RC')) && 'milestone' || 'release' }} \
            --repo-deploy libs-staging-local
          echo JFROG_CLI_BUILD_NAME=${{ github.event.repository.name }}-${{ inputs.releaseVersion }} >> $GITHUB_ENV
          echo JFROG_CLI_BUILD_NUMBER=$GITHUB_RUN_NUMBER >> $GITHUB_ENV

      - name: Set Release Version
        run: |
          sed -i "s/version=.*/version=${{ inputs.releaseVersion }}/" gradle.properties 

      - name: Build and Publish
        run: |
          jf gradle build ${{ inputs.gradleTasks }} artifactoryPublish
          jf rt build-publish

      - name: Tag Release and Next Development Version
        run: |
          git config --global user.name 'Spring Builds'
          git config --global user.email 'builds@springframework.org'
          git commit -a -m "[artifactory-release] Release version ${{ inputs.releaseVersion }}"
          git tag "v${{ inputs.releaseVersion }}"
          git push --tags origin
          sed -i "s/version=.*/version=${{ inputs.nextDevelopmentVersion }}/" gradle.properties 
          git commit -a -m "[artifactory-release] Next development version"
          git push origin

      - name: Print Build Info
        run: |
          echo "::notice ::Artifactory Build Name=$JFROG_CLI_BUILD_NAME"
          echo "::notice ::Artifactory Build Number=$JFROG_CLI_BUILD_NUMBER"